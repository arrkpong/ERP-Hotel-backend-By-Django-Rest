# Generated by Django 5.1.4 on 2024-12-07 23:42

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='ชื่อเต็มของลูกค้า', max_length=255, verbose_name='ชื่อเต็ม')),
                ('email', models.EmailField(help_text='อีเมลที่ใช้ในการติดต่อหรือทำการจอง', max_length=254, unique=True, verbose_name='อีเมล')),
                ('phone', models.CharField(help_text='หมายเลขโทรศัพท์ของลูกค้า', max_length=15, verbose_name='เบอร์โทรศัพท์')),
                ('id_card_number', models.CharField(blank=True, help_text='หมายเลขบัตรประชาชนของลูกค้า', max_length=13, null=True, unique=True, verbose_name='เลขบัตรประชาชน')),
                ('address', models.TextField(blank=True, help_text='ที่อยู่ของลูกค้า (อาจจะเป็นที่อยู่สำหรับการจัดส่งเอกสารหรือการเช็คอิน)', null=True, verbose_name='ที่อยู่')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='วันที่และเวลาที่ลูกค้าถูกบันทึกเข้าระบบ', verbose_name='สร้างเมื่อ')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='วันที่และเวลาที่ข้อมูลของลูกค้าถูกแก้ไขล่าสุด', verbose_name='แก้ไขเมื่อ')),
            ],
            options={
                'verbose_name': 'ลูกค้า',
                'verbose_name_plural': 'ลูกค้า',
                'ordering': ['full_name'],
                'indexes': [models.Index(fields=['email'], name='guests_gues_email_e4fe59_idx'), models.Index(fields=['phone'], name='guests_gues_phone_6b6426_idx')],
            },
        ),
        migrations.CreateModel(
            name='HistoricalGuest',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('full_name', models.CharField(help_text='ชื่อเต็มของลูกค้า', max_length=255, verbose_name='ชื่อเต็ม')),
                ('email', models.EmailField(db_index=True, help_text='อีเมลที่ใช้ในการติดต่อหรือทำการจอง', max_length=254, verbose_name='อีเมล')),
                ('phone', models.CharField(help_text='หมายเลขโทรศัพท์ของลูกค้า', max_length=15, verbose_name='เบอร์โทรศัพท์')),
                ('id_card_number', models.CharField(blank=True, db_index=True, help_text='หมายเลขบัตรประชาชนของลูกค้า', max_length=13, null=True, verbose_name='เลขบัตรประชาชน')),
                ('address', models.TextField(blank=True, help_text='ที่อยู่ของลูกค้า (อาจจะเป็นที่อยู่สำหรับการจัดส่งเอกสารหรือการเช็คอิน)', null=True, verbose_name='ที่อยู่')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='วันที่และเวลาที่ลูกค้าถูกบันทึกเข้าระบบ', verbose_name='สร้างเมื่อ')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='วันที่และเวลาที่ข้อมูลของลูกค้าถูกแก้ไขล่าสุด', verbose_name='แก้ไขเมื่อ')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ลูกค้า',
                'verbose_name_plural': 'historical ลูกค้า',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
